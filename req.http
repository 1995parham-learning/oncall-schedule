### Successful Cases

# Create a new schedule for Team T1 (Saturday)

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "saturday"
  ],
  "end": "8:00PM",
  "members": [
    "M1",
    "M2"
  ],
  "name": "S1",
  "start": "8:00AM",
  "team": "T1"
}


### 

# Create a new schedule for Team T1 (Sunday)

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "sunday"
  ],
  "end": "8:00PM",
  "members": [
    "M3",
    "M4"
  ],
  "name": "S2",
  "start": "8:00AM",
  "team": "T1"
}


### 

# Create a schedule with multiple days

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "monday",
    "tuesday",
    "wednesday",
    "thursday",
    "friday"
  ],
  "end": "5:00PM",
  "members": [
    "M5",
    "M6",
    "M7"
  ],
  "name": "Weekdays",
  "start": "9:00AM",
  "team": "T2"
}


### 

# Read schedule for T1 on Saturday at 9:00 AM UTC
# 2025-04-26 is a Saturday

GET http://127.0.0.1:1373/schedule?team=T1&time=2025-04-26T09:00:00Z HTTP/1.1


### 

# Read schedule for T1 on Sunday at 12:00 PM UTC
# 2025-04-27 is a Sunday

GET http://127.0.0.1:1373/schedule?team=T1&time=2025-04-27T12:00:00Z HTTP/1.1


### 

# Read schedule for T2 on Monday at 10:00 AM UTC

GET http://127.0.0.1:1373/schedule?team=T2&time=2025-04-28T10:00:00Z HTTP/1.1


### 


### Validation Error Cases

# Missing team field

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "monday"
  ],
  "end": "5:00PM",
  "members": [
    "M1"
  ],
  "name": "Invalid",
  "start": "9:00AM"
}


### 

# Empty members array

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "monday"
  ],
  "end": "5:00PM",
  "members": [],
  "name": "Invalid",
  "start": "9:00AM",
  "team": "T3"
}


### 

# Invalid day name

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "notaday"
  ],
  "end": "5:00PM",
  "members": [
    "M1"
  ],
  "name": "Invalid",
  "start": "9:00AM",
  "team": "T3"
}


### 

# Invalid time format

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "monday"
  ],
  "end": "5:00PM",
  "members": [
    "M1"
  ],
  "name": "Invalid",
  "start": "25:00",
  "team": "T3"
}


### 

# Start time after end time

POST http://127.0.0.1:1373/schedule HTTP/1.1
Content-Type: application/json

{
  "days": [
    "monday"
  ],
  "end": "9:00AM",
  "members": [
    "M1"
  ],
  "name": "Invalid",
  "start": "5:00PM",
  "team": "T3"
}


### 


### Not Found Cases

# Query non-existent team

GET http://127.0.0.1:1373/schedule?team=NonExistent&time=2025-04-26T09:00:00Z HTTP/1.1


### 

# Query existing team but wrong day

GET http://127.0.0.1:1373/schedule?team=T1&time=2025-04-28T09:00:00Z HTTP/1.1


### 

# Query existing team but outside time range (too early)

GET http://127.0.0.1:1373/schedule?team=T1&time=2025-04-26T06:00:00Z HTTP/1.1


### 

# Query existing team but outside time range (too late)

GET http://127.0.0.1:1373/schedule?team=T1&time=2025-04-26T22:00:00Z HTTP/1.1


### 

# Missing team query parameter

GET http://127.0.0.1:1373/schedule?time=2025-04-26T09:00:00Z HTTP/1.1


### 

# Missing time query parameter

GET http://127.0.0.1:1373/schedule?team=T1 HTTP/1.1


### 

# Invalid time format in query

GET http://127.0.0.1:1373/schedule?team=T1&time=not-a-date HTTP/1.1


### 
